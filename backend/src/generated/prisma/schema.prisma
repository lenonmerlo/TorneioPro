generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id       Int      @id @default(autoincrement())
  nome     String
  email    String   @unique
  senha    String
  perfil   String
  criadoEm DateTime @default(now())

  torneios Torneio[]
}

model Atleta {
  id     Int     @id @default(autoincrement())
  nome   String
  email  String  @unique
  genero String
  nivel  String?

  participacoes Participacao[]
  equipes       EquipeAtleta[]
}

model Torneio {
  id          Int           @id @default(autoincrement())
  nome        String
  data        DateTime
  local       String?
  status      StatusTorneio @default(aberto)
  criadoPorId Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  criadoPor     Usuario        @relation(fields: [criadoPorId], references: [id])
  participacoes Participacao[]
  equipes       Equipe[]
  partidas      Partida[]
}

model Participacao {
  id        Int      @id @default(autoincrement())
  atletaId  Int
  torneioId Int
  criadoEm  DateTime @default(now())

  atleta  Atleta  @relation(fields: [atletaId], references: [id])
  torneio Torneio @relation(fields: [torneioId], references: [id])

  @@unique([atletaId, torneioId])
}

model Equipe {
  id        Int        @id @default(autoincrement())
  nome      String
  tipo      TipoEquipe
  torneioId Int
  createdAt DateTime   @default(now())

  torneio             Torneio        @relation(fields: [torneioId], references: [id])
  atletas             EquipeAtleta[]
  partidasComoEquipe1 Partida[]      @relation("Equipe1")
  partidasComoEquipe2 Partida[]      @relation("Equipe2")

  Partida Partida[] @relation("Vencedor")
}

model EquipeAtleta {
  atletaId Int
  equipeId Int

  atleta Atleta @relation(fields: [atletaId], references: [id])
  equipe Equipe @relation(fields: [equipeId], references: [id])

  @@id([atletaId, equipeId])
}

model Partida {
  id            Int      @id @default(autoincrement())
  torneioId     Int
  fase          String
  pontosEquipe1 Int?
  pontosEquipe2 Int?
  vencedorId    Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  torneio Torneio @relation(fields: [torneioId], references: [id])

  equipe1Id Int
  equipe2Id Int
  equipe1   Equipe  @relation("Equipe1", fields: [equipe1Id], references: [id])
  equipe2   Equipe  @relation("Equipe2", fields: [equipe2Id], references: [id])
  vencedor  Equipe? @relation("Vencedor", fields: [vencedorId], references: [id])
}

enum StatusTorneio {
  aberto
  fechado
  encerrado
}

enum TipoEquipe {
  individual
  dupla
  trio
  quarteto
}

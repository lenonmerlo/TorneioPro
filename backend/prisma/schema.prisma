// schema.prisma

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
  output        = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Equipe {
  id      Int      @id @default(autoincrement())
  nome    String
  tipo    String   // "dupla", "trio", "quarteto"
  atletas Atleta[]

  partidasComoEquipe1 Partida[] @relation("Equipe1")
  partidasComoEquipe2 Partida[] @relation("Equipe2")
}


model Atleta {
  id       Int     @id @default(autoincrement())
  nome     String
  genero   String
  nivel    String?   
  equipeId Int?
  equipe   Equipe? @relation(fields: [equipeId], references: [id])
}

model Usuario {
  id       Int    @id @default(autoincrement())
  nome     String
  email    String @unique
  senha    String
  perfil   String // "aluno" ou "professor"
  criadoEm DateTime @default(now())

  Torneio Torneio[]
}

model Torneio {
  id           Int      @id @default(autoincrement())
  nome         String
  tipo         TipoTorneio
  data         DateTime
  local        String?
  status       StatusTorneio @default(aberto)
  criadoPor    Usuario       @relation(fields: [criadoPorId], references: [id])
  criadoPorId  Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Partida Partida[]
}
enum StatusTorneio {
  aberto
  fechado
  encerrado
}
enum TipoTorneio {
  amador
  oficial
}

model EquipeOficial {
  id        Int              @id @default(autoincrement())
  nome      String
  tipo      String           // 'dupla', 'trio', 'quarteto'
  atletas   AtletaOficial[]
  createdAt DateTime         @default(now())
}

model AtletaOficial {
  id        Int              @id @default(autoincrement())
  nome      String
  genero    String
  equipeId  Int
  equipe    EquipeOficial    @relation(fields: [equipeId], references: [id], onDelete: Cascade)
}

model Partida {
  id             Int       @id @default(autoincrement())
  torneioId      Int
  equipe1Id      Int
  equipe2Id      Int
  pontosEquipe1  Int
  pontosEquipe2  Int
  fase           String
  createdAt      DateTime  @default(now())

  torneio        Torneio   @relation(fields: [torneioId], references: [id])
  equipe1        Equipe    @relation("Equipe1", fields: [equipe1Id], references: [id])
  equipe2        Equipe    @relation("Equipe2", fields: [equipe2Id], references: [id])
}
